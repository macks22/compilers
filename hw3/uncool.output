Terminals unused in grammar

   INT_ARR_T
   VOID_T


State 20 conflicts: 1 reduce/reduce
State 76 conflicts: 9 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program class
    2        | class

    3 $@1: %empty

    4 class: CLASS_T TYPE $@1 '{' feature_list '}'

    5 feature_list: feature_list feature ';'
    6             | %empty

    7 $@2: %empty

    8 $@3: %empty

    9 feature: ID '(' $@2 formal_list ')' ':' typename $@3 '{' expr_list '}'

   10 $@4: %empty

   11 feature: ID '(' ')' ':' typename $@4 '{' expr_list '}'
   12        | ID ':' typename

   13 $@5: %empty

   14 feature: ID ':' typename $@5 ASSIGN simple_constant

   15 $@6: %empty

   16 feature: ID ':' STRING_T $@6 ASSIGN STRING_CONST
   17        | ID ':' INT_T '[' ']'

   18 typename: INT_T
   19         | BOOL_T
   20         | STRING_T
   21         | TYPE

   22 simple_constant: INT_CONST
   23                | TRUE_T
   24                | FALSE_T

   25 formal_list: formal_list ',' formal
   26            | formal

   27 formal: ID ':' typename
   28       | ID ':' INT_T '[' ']'

   29 expr: ID ASSIGN expr
   30     | ID '[' expr ']' ASSIGN expr
   31     | ID '.' ID '(' ')'
   32     | ID '.' ID '(' actual_list ')'
   33     | ID '(' ')'
   34     | ID '(' actual_list ')'
   35     | IN_INT '(' ')'
   36     | OUT_STRING '(' expr ')'
   37     | OUT_INT '(' expr ')'
   38     | ID
   39     | ID '[' expr ']'
   40     | IF_T expr THEN_T expr ELSE_T expr FI_T

   41 $@7: %empty

   42 expr: WHILE_T expr $@7 LOOP_T expr POOL_T
   43     | '{' expr_list '}'

   44 $@8: %empty

   45 expr: LET_T $@8 formal_list IN_T expr TEL_T
   46     | NEW_T TYPE '(' ')'
   47     | NEW_T TYPE '(' actual_list ')'
   48     | NEW_T INT_T '[' expr ']'
   49     | ISVOID_T expr
   50     | expr '+' expr
   51     | expr '-' expr
   52     | expr '*' expr
   53     | '~' expr
   54     | NOT_T expr
   55     | expr NE expr
   56     | expr GT expr
   57     | expr GE expr
   58     | expr LT expr
   59     | expr LE expr
   60     | expr EQ expr
   61     | '(' expr ')'
   62     | TRUE_T
   63     | FALSE_T
   64     | INT_CONST
   65     | STRING_CONST
   66     | SELF_T

   67 actual_list: actual_list ',' expr
   68            | expr

   69 expr_list: expr_list ';' expr
   70          | expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 9 11 31 32 33 34 35 36 37 46 47 61
')' (41) 9 11 31 32 33 34 35 36 37 46 47 61
'*' (42) 52
'+' (43) 50
',' (44) 25 67
'-' (45) 51
'.' (46) 31 32
':' (58) 9 11 12 14 16 17 27 28
';' (59) 5 69
'[' (91) 17 28 30 39 48
']' (93) 17 28 30 39 48
'{' (123) 4 9 11 43
'}' (125) 4 9 11 43
'~' (126) 53
error (256)
CLASS_T (258) 4
INT_T (259) 17 18 28 48
BOOL_T (260) 19
STRING_T (261) 16 20
IN_T (262) 45
TEL_T (263) 45
INT_ARR_T (264)
VOID_T (265)
THEN_T (266) 40
ELSE_T (267) 40
FI_T (268) 40
LOOP_T (269) 42
POOL_T (270) 42
NEW_T (271) 46 47 48
ISVOID_T (272) 49
SELF_T (273) 66
LE (274) 59
LT (275) 58
GT (276) 56
GE (277) 57
NE (278) 55
EQ (279) 60
NOT_T (280) 54
OUT_STRING (281) 36
OUT_INT (282) 37
IN_INT (283) 35
TRUE_T (284) 23 62
FALSE_T (285) 24 63
INT_CONST (286) 22 64
LET_T (287) 45
IF_T (288) 40
WHILE_T (289) 42
STRING_CONST (290) 16 65
TYPE (291) 4 21 46 47
ID (292) 9 11 12 14 16 17 27 28 29 30 31 32 33 34 38 39
ASSIGN (293) 14 16 29 30
UC (294)
UM (295)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1 2, on right: 0 1
class (57)
    on left: 4, on right: 1 2
$@1 (58)
    on left: 3, on right: 4
feature_list (59)
    on left: 5 6, on right: 4 5
feature (60)
    on left: 9 11 12 14 16 17, on right: 5
$@2 (61)
    on left: 7, on right: 9
$@3 (62)
    on left: 8, on right: 9
$@4 (63)
    on left: 10, on right: 11
$@5 (64)
    on left: 13, on right: 14
$@6 (65)
    on left: 15, on right: 16
typename (66)
    on left: 18 19 20 21, on right: 9 11 12 14 27
simple_constant (67)
    on left: 22 23 24, on right: 14
formal_list (68)
    on left: 25 26, on right: 9 25 45
formal (69)
    on left: 27 28, on right: 25 26
expr (70)
    on left: 29 30 31 32 33 34 35 36 37 38 39 40 42 43 45 46 47 48
    49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66, on right:
    29 30 36 37 39 40 42 45 48 49 50 51 52 53 54 55 56 57 58 59 60
    61 67 68 69 70
$@7 (71)
    on left: 41, on right: 42
$@8 (72)
    on left: 44, on right: 45
actual_list (73)
    on left: 67 68, on right: 32 34 47 67
expr_list (74)
    on left: 69 70, on right: 9 11 43 69


State 0

    0 $accept: . program $end

    CLASS_T  shift, and go to state 1

    program  go to state 2
    class    go to state 3


State 1

    4 class: CLASS_T . TYPE $@1 '{' feature_list '}'

    TYPE  shift, and go to state 4


State 2

    0 $accept: program . $end
    1 program: program . class

    $end     shift, and go to state 5
    CLASS_T  shift, and go to state 1

    class  go to state 6


State 3

    2 program: class .

    $default  reduce using rule 2 (program)


State 4

    4 class: CLASS_T TYPE . $@1 '{' feature_list '}'

    $default  reduce using rule 3 ($@1)

    $@1  go to state 7


State 5

    0 $accept: program $end .

    $default  accept


State 6

    1 program: program class .

    $default  reduce using rule 1 (program)


State 7

    4 class: CLASS_T TYPE $@1 . '{' feature_list '}'

    '{'  shift, and go to state 8


State 8

    4 class: CLASS_T TYPE $@1 '{' . feature_list '}'

    $default  reduce using rule 6 (feature_list)

    feature_list  go to state 9


State 9

    4 class: CLASS_T TYPE $@1 '{' feature_list . '}'
    5 feature_list: feature_list . feature ';'

    ID   shift, and go to state 10
    '}'  shift, and go to state 11

    feature  go to state 12


State 10

    9 feature: ID . '(' $@2 formal_list ')' ':' typename $@3 '{' expr_list '}'
   11        | ID . '(' ')' ':' typename $@4 '{' expr_list '}'
   12        | ID . ':' typename
   14        | ID . ':' typename $@5 ASSIGN simple_constant
   16        | ID . ':' STRING_T $@6 ASSIGN STRING_CONST
   17        | ID . ':' INT_T '[' ']'

    '('  shift, and go to state 13
    ':'  shift, and go to state 14


State 11

    4 class: CLASS_T TYPE $@1 '{' feature_list '}' .

    $default  reduce using rule 4 (class)


State 12

    5 feature_list: feature_list feature . ';'

    ';'  shift, and go to state 15


State 13

    9 feature: ID '(' . $@2 formal_list ')' ':' typename $@3 '{' expr_list '}'
   11        | ID '(' . ')' ':' typename $@4 '{' expr_list '}'

    ')'  shift, and go to state 16

    $default  reduce using rule 7 ($@2)

    $@2  go to state 17


State 14

   12 feature: ID ':' . typename
   14        | ID ':' . typename $@5 ASSIGN simple_constant
   16        | ID ':' . STRING_T $@6 ASSIGN STRING_CONST
   17        | ID ':' . INT_T '[' ']'

    INT_T     shift, and go to state 18
    BOOL_T    shift, and go to state 19
    STRING_T  shift, and go to state 20
    TYPE      shift, and go to state 21

    typename  go to state 22


State 15

    5 feature_list: feature_list feature ';' .

    $default  reduce using rule 5 (feature_list)


State 16

   11 feature: ID '(' ')' . ':' typename $@4 '{' expr_list '}'

    ':'  shift, and go to state 23


State 17

    9 feature: ID '(' $@2 . formal_list ')' ':' typename $@3 '{' expr_list '}'

    ID  shift, and go to state 24

    formal_list  go to state 25
    formal       go to state 26


State 18

   17 feature: ID ':' INT_T . '[' ']'
   18 typename: INT_T .

    '['  shift, and go to state 27

    $default  reduce using rule 18 (typename)


State 19

   19 typename: BOOL_T .

    $default  reduce using rule 19 (typename)


State 20

   16 feature: ID ':' STRING_T . $@6 ASSIGN STRING_CONST
   20 typename: STRING_T .

    ASSIGN    reduce using rule 15 ($@6)
    ASSIGN    [reduce using rule 20 (typename)]
    ';'       reduce using rule 20 (typename)
    $default  reduce using rule 15 ($@6)

    $@6  go to state 28


State 21

   21 typename: TYPE .

    $default  reduce using rule 21 (typename)


State 22

   12 feature: ID ':' typename .
   14        | ID ':' typename . $@5 ASSIGN simple_constant

    ASSIGN    reduce using rule 13 ($@5)
    $default  reduce using rule 12 (feature)

    $@5  go to state 29


State 23

   11 feature: ID '(' ')' ':' . typename $@4 '{' expr_list '}'

    INT_T     shift, and go to state 30
    BOOL_T    shift, and go to state 19
    STRING_T  shift, and go to state 31
    TYPE      shift, and go to state 21

    typename  go to state 32


State 24

   27 formal: ID . ':' typename
   28       | ID . ':' INT_T '[' ']'

    ':'  shift, and go to state 33


State 25

    9 feature: ID '(' $@2 formal_list . ')' ':' typename $@3 '{' expr_list '}'
   25 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 34
    ','  shift, and go to state 35


State 26

   26 formal_list: formal .

    $default  reduce using rule 26 (formal_list)


State 27

   17 feature: ID ':' INT_T '[' . ']'

    ']'  shift, and go to state 36


State 28

   16 feature: ID ':' STRING_T $@6 . ASSIGN STRING_CONST

    ASSIGN  shift, and go to state 37


State 29

   14 feature: ID ':' typename $@5 . ASSIGN simple_constant

    ASSIGN  shift, and go to state 38


State 30

   18 typename: INT_T .

    $default  reduce using rule 18 (typename)


State 31

   20 typename: STRING_T .

    $default  reduce using rule 20 (typename)


State 32

   11 feature: ID '(' ')' ':' typename . $@4 '{' expr_list '}'

    $default  reduce using rule 10 ($@4)

    $@4  go to state 39


State 33

   27 formal: ID ':' . typename
   28       | ID ':' . INT_T '[' ']'

    INT_T     shift, and go to state 40
    BOOL_T    shift, and go to state 19
    STRING_T  shift, and go to state 31
    TYPE      shift, and go to state 21

    typename  go to state 41


State 34

    9 feature: ID '(' $@2 formal_list ')' . ':' typename $@3 '{' expr_list '}'

    ':'  shift, and go to state 42


State 35

   25 formal_list: formal_list ',' . formal

    ID  shift, and go to state 24

    formal  go to state 43


State 36

   17 feature: ID ':' INT_T '[' ']' .

    $default  reduce using rule 17 (feature)


State 37

   16 feature: ID ':' STRING_T $@6 ASSIGN . STRING_CONST

    STRING_CONST  shift, and go to state 44


State 38

   14 feature: ID ':' typename $@5 ASSIGN . simple_constant

    TRUE_T     shift, and go to state 45
    FALSE_T    shift, and go to state 46
    INT_CONST  shift, and go to state 47

    simple_constant  go to state 48


State 39

   11 feature: ID '(' ')' ':' typename $@4 . '{' expr_list '}'

    '{'  shift, and go to state 49


State 40

   18 typename: INT_T .
   28 formal: ID ':' INT_T . '[' ']'

    '['  shift, and go to state 50

    $default  reduce using rule 18 (typename)


State 41

   27 formal: ID ':' typename .

    $default  reduce using rule 27 (formal)


State 42

    9 feature: ID '(' $@2 formal_list ')' ':' . typename $@3 '{' expr_list '}'

    INT_T     shift, and go to state 30
    BOOL_T    shift, and go to state 19
    STRING_T  shift, and go to state 31
    TYPE      shift, and go to state 21

    typename  go to state 51


State 43

   25 formal_list: formal_list ',' formal .

    $default  reduce using rule 25 (formal_list)


State 44

   16 feature: ID ':' STRING_T $@6 ASSIGN STRING_CONST .

    $default  reduce using rule 16 (feature)


State 45

   23 simple_constant: TRUE_T .

    $default  reduce using rule 23 (simple_constant)


State 46

   24 simple_constant: FALSE_T .

    $default  reduce using rule 24 (simple_constant)


State 47

   22 simple_constant: INT_CONST .

    $default  reduce using rule 22 (simple_constant)


State 48

   14 feature: ID ':' typename $@5 ASSIGN simple_constant .

    $default  reduce using rule 14 (feature)


State 49

   11 feature: ID '(' ')' ':' typename $@4 '{' . expr_list '}'

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr       go to state 70
    expr_list  go to state 71


State 50

   28 formal: ID ':' INT_T '[' . ']'

    ']'  shift, and go to state 72


State 51

    9 feature: ID '(' $@2 formal_list ')' ':' typename . $@3 '{' expr_list '}'

    $default  reduce using rule 8 ($@3)

    $@3  go to state 73


State 52

   46 expr: NEW_T . TYPE '(' ')'
   47     | NEW_T . TYPE '(' actual_list ')'
   48     | NEW_T . INT_T '[' expr ']'

    INT_T  shift, and go to state 74
    TYPE   shift, and go to state 75


State 53

   49 expr: ISVOID_T . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 76


State 54

   66 expr: SELF_T .

    $default  reduce using rule 66 (expr)


State 55

   54 expr: NOT_T . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 77


State 56

   36 expr: OUT_STRING . '(' expr ')'

    '('  shift, and go to state 78


State 57

   37 expr: OUT_INT . '(' expr ')'

    '('  shift, and go to state 79


State 58

   35 expr: IN_INT . '(' ')'

    '('  shift, and go to state 80


State 59

   62 expr: TRUE_T .

    $default  reduce using rule 62 (expr)


State 60

   63 expr: FALSE_T .

    $default  reduce using rule 63 (expr)


State 61

   64 expr: INT_CONST .

    $default  reduce using rule 64 (expr)


State 62

   45 expr: LET_T . $@8 formal_list IN_T expr TEL_T

    $default  reduce using rule 44 ($@8)

    $@8  go to state 81


State 63

   40 expr: IF_T . expr THEN_T expr ELSE_T expr FI_T

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 82


State 64

   42 expr: WHILE_T . expr $@7 LOOP_T expr POOL_T

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 83


State 65

   65 expr: STRING_CONST .

    $default  reduce using rule 65 (expr)


State 66

   29 expr: ID . ASSIGN expr
   30     | ID . '[' expr ']' ASSIGN expr
   31     | ID . '.' ID '(' ')'
   32     | ID . '.' ID '(' actual_list ')'
   33     | ID . '(' ')'
   34     | ID . '(' actual_list ')'
   38     | ID .
   39     | ID . '[' expr ']'

    ASSIGN  shift, and go to state 84
    '('     shift, and go to state 85
    '['     shift, and go to state 86
    '.'     shift, and go to state 87

    $default  reduce using rule 38 (expr)


State 67

   43 expr: '{' . expr_list '}'

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr       go to state 70
    expr_list  go to state 88


State 68

   61 expr: '(' . expr ')'

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 89


State 69

   53 expr: '~' . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 90


State 70

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr
   70 expr_list: expr .

    LE   shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    GE   shift, and go to state 94
    NE   shift, and go to state 95
    EQ   shift, and go to state 96
    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    $default  reduce using rule 70 (expr_list)


State 71

   11 feature: ID '(' ')' ':' typename $@4 '{' expr_list . '}'
   69 expr_list: expr_list . ';' expr

    '}'  shift, and go to state 100
    ';'  shift, and go to state 101


State 72

   28 formal: ID ':' INT_T '[' ']' .

    $default  reduce using rule 28 (formal)


State 73

    9 feature: ID '(' $@2 formal_list ')' ':' typename $@3 . '{' expr_list '}'

    '{'  shift, and go to state 102


State 74

   48 expr: NEW_T INT_T . '[' expr ']'

    '['  shift, and go to state 103


State 75

   46 expr: NEW_T TYPE . '(' ')'
   47     | NEW_T TYPE . '(' actual_list ')'

    '('  shift, and go to state 104


State 76

   49 expr: ISVOID_T expr .
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    LE   shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    GE   shift, and go to state 94
    NE   shift, and go to state 95
    EQ   shift, and go to state 96
    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    LE        [reduce using rule 49 (expr)]
    LT        [reduce using rule 49 (expr)]
    GT        [reduce using rule 49 (expr)]
    GE        [reduce using rule 49 (expr)]
    NE        [reduce using rule 49 (expr)]
    EQ        [reduce using rule 49 (expr)]
    '+'       [reduce using rule 49 (expr)]
    '-'       [reduce using rule 49 (expr)]
    '*'       [reduce using rule 49 (expr)]
    $default  reduce using rule 49 (expr)


State 77

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   54     | NOT_T expr .
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    $default  reduce using rule 54 (expr)


State 78

   36 expr: OUT_STRING '(' . expr ')'

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 105


State 79

   37 expr: OUT_INT '(' . expr ')'

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 106


State 80

   35 expr: IN_INT '(' . ')'

    ')'  shift, and go to state 107


State 81

   45 expr: LET_T $@8 . formal_list IN_T expr TEL_T

    ID  shift, and go to state 24

    formal_list  go to state 108
    formal       go to state 26


State 82

   40 expr: IF_T expr . THEN_T expr ELSE_T expr FI_T
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    THEN_T  shift, and go to state 109
    LE      shift, and go to state 91
    LT      shift, and go to state 92
    GT      shift, and go to state 93
    GE      shift, and go to state 94
    NE      shift, and go to state 95
    EQ      shift, and go to state 96
    '+'     shift, and go to state 97
    '-'     shift, and go to state 98
    '*'     shift, and go to state 99


State 83

   42 expr: WHILE_T expr . $@7 LOOP_T expr POOL_T
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    LE   shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    GE   shift, and go to state 94
    NE   shift, and go to state 95
    EQ   shift, and go to state 96
    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    $default  reduce using rule 41 ($@7)

    $@7  go to state 110


State 84

   29 expr: ID ASSIGN . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 111


State 85

   33 expr: ID '(' . ')'
   34     | ID '(' . actual_list ')'

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    ')'           shift, and go to state 112
    '~'           shift, and go to state 69

    expr         go to state 113
    actual_list  go to state 114


State 86

   30 expr: ID '[' . expr ']' ASSIGN expr
   39     | ID '[' . expr ']'

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 115


State 87

   31 expr: ID '.' . ID '(' ')'
   32     | ID '.' . ID '(' actual_list ')'

    ID  shift, and go to state 116


State 88

   43 expr: '{' expr_list . '}'
   69 expr_list: expr_list . ';' expr

    '}'  shift, and go to state 117
    ';'  shift, and go to state 101


State 89

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr
   61     | '(' expr . ')'

    LE   shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    GE   shift, and go to state 94
    NE   shift, and go to state 95
    EQ   shift, and go to state 96
    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99
    ')'  shift, and go to state 118


State 90

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   53     | '~' expr .
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    $default  reduce using rule 53 (expr)


State 91

   59 expr: expr LE . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 119


State 92

   58 expr: expr LT . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 120


State 93

   56 expr: expr GT . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 121


State 94

   57 expr: expr GE . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 122


State 95

   55 expr: expr NE . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 123


State 96

   60 expr: expr EQ . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 124


State 97

   50 expr: expr '+' . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 125


State 98

   51 expr: expr '-' . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 126


State 99

   52 expr: expr '*' . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 127


State 100

   11 feature: ID '(' ')' ':' typename $@4 '{' expr_list '}' .

    $default  reduce using rule 11 (feature)


State 101

   69 expr_list: expr_list ';' . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 128


State 102

    9 feature: ID '(' $@2 formal_list ')' ':' typename $@3 '{' . expr_list '}'

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr       go to state 70
    expr_list  go to state 129


State 103

   48 expr: NEW_T INT_T '[' . expr ']'

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 130


State 104

   46 expr: NEW_T TYPE '(' . ')'
   47     | NEW_T TYPE '(' . actual_list ')'

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    ')'           shift, and go to state 131
    '~'           shift, and go to state 69

    expr         go to state 113
    actual_list  go to state 132


State 105

   36 expr: OUT_STRING '(' expr . ')'
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    LE   shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    GE   shift, and go to state 94
    NE   shift, and go to state 95
    EQ   shift, and go to state 96
    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99
    ')'  shift, and go to state 133


State 106

   37 expr: OUT_INT '(' expr . ')'
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    LE   shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    GE   shift, and go to state 94
    NE   shift, and go to state 95
    EQ   shift, and go to state 96
    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99
    ')'  shift, and go to state 134


State 107

   35 expr: IN_INT '(' ')' .

    $default  reduce using rule 35 (expr)


State 108

   25 formal_list: formal_list . ',' formal
   45 expr: LET_T $@8 formal_list . IN_T expr TEL_T

    IN_T  shift, and go to state 135
    ','   shift, and go to state 35


State 109

   40 expr: IF_T expr THEN_T . expr ELSE_T expr FI_T

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 136


State 110

   42 expr: WHILE_T expr $@7 . LOOP_T expr POOL_T

    LOOP_T  shift, and go to state 137


State 111

   29 expr: ID ASSIGN expr .
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    LE   shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    GE   shift, and go to state 94
    NE   shift, and go to state 95
    EQ   shift, and go to state 96
    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    $default  reduce using rule 29 (expr)


State 112

   33 expr: ID '(' ')' .

    $default  reduce using rule 33 (expr)


State 113

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr
   68 actual_list: expr .

    LE   shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    GE   shift, and go to state 94
    NE   shift, and go to state 95
    EQ   shift, and go to state 96
    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    $default  reduce using rule 68 (actual_list)


State 114

   34 expr: ID '(' actual_list . ')'
   67 actual_list: actual_list . ',' expr

    ')'  shift, and go to state 138
    ','  shift, and go to state 139


State 115

   30 expr: ID '[' expr . ']' ASSIGN expr
   39     | ID '[' expr . ']'
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    LE   shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    GE   shift, and go to state 94
    NE   shift, and go to state 95
    EQ   shift, and go to state 96
    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99
    ']'  shift, and go to state 140


State 116

   31 expr: ID '.' ID . '(' ')'
   32     | ID '.' ID . '(' actual_list ')'

    '('  shift, and go to state 141


State 117

   43 expr: '{' expr_list '}' .

    $default  reduce using rule 43 (expr)


State 118

   61 expr: '(' expr ')' .

    $default  reduce using rule 61 (expr)


State 119

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   59     | expr LE expr .
   60     | expr . EQ expr

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    LE  error (nonassociative)
    LT  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EQ  error (nonassociative)

    $default  reduce using rule 59 (expr)


State 120

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   58     | expr LT expr .
   59     | expr . LE expr
   60     | expr . EQ expr

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    LE  error (nonassociative)
    LT  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EQ  error (nonassociative)

    $default  reduce using rule 58 (expr)


State 121

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   56     | expr GT expr .
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    LE  error (nonassociative)
    LT  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EQ  error (nonassociative)

    $default  reduce using rule 56 (expr)


State 122

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   57     | expr GE expr .
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    LE  error (nonassociative)
    LT  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EQ  error (nonassociative)

    $default  reduce using rule 57 (expr)


State 123

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   55     | expr NE expr .
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    LE  error (nonassociative)
    LT  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EQ  error (nonassociative)

    $default  reduce using rule 55 (expr)


State 124

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr
   60     | expr EQ expr .

    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    LE  error (nonassociative)
    LT  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)
    NE  error (nonassociative)
    EQ  error (nonassociative)

    $default  reduce using rule 60 (expr)


State 125

   50 expr: expr . '+' expr
   50     | expr '+' expr .
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    '*'  shift, and go to state 99

    $default  reduce using rule 50 (expr)


State 126

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   51     | expr '-' expr .
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    '*'  shift, and go to state 99

    $default  reduce using rule 51 (expr)


State 127

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   52     | expr '*' expr .
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    $default  reduce using rule 52 (expr)


State 128

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr
   69 expr_list: expr_list ';' expr .

    LE   shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    GE   shift, and go to state 94
    NE   shift, and go to state 95
    EQ   shift, and go to state 96
    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    $default  reduce using rule 69 (expr_list)


State 129

    9 feature: ID '(' $@2 formal_list ')' ':' typename $@3 '{' expr_list . '}'
   69 expr_list: expr_list . ';' expr

    '}'  shift, and go to state 142
    ';'  shift, and go to state 101


State 130

   48 expr: NEW_T INT_T '[' expr . ']'
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    LE   shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    GE   shift, and go to state 94
    NE   shift, and go to state 95
    EQ   shift, and go to state 96
    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99
    ']'  shift, and go to state 143


State 131

   46 expr: NEW_T TYPE '(' ')' .

    $default  reduce using rule 46 (expr)


State 132

   47 expr: NEW_T TYPE '(' actual_list . ')'
   67 actual_list: actual_list . ',' expr

    ')'  shift, and go to state 144
    ','  shift, and go to state 139


State 133

   36 expr: OUT_STRING '(' expr ')' .

    $default  reduce using rule 36 (expr)


State 134

   37 expr: OUT_INT '(' expr ')' .

    $default  reduce using rule 37 (expr)


State 135

   45 expr: LET_T $@8 formal_list IN_T . expr TEL_T

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 145


State 136

   40 expr: IF_T expr THEN_T expr . ELSE_T expr FI_T
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    ELSE_T  shift, and go to state 146
    LE      shift, and go to state 91
    LT      shift, and go to state 92
    GT      shift, and go to state 93
    GE      shift, and go to state 94
    NE      shift, and go to state 95
    EQ      shift, and go to state 96
    '+'     shift, and go to state 97
    '-'     shift, and go to state 98
    '*'     shift, and go to state 99


State 137

   42 expr: WHILE_T expr $@7 LOOP_T . expr POOL_T

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 147


State 138

   34 expr: ID '(' actual_list ')' .

    $default  reduce using rule 34 (expr)


State 139

   67 actual_list: actual_list ',' . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 148


State 140

   30 expr: ID '[' expr ']' . ASSIGN expr
   39     | ID '[' expr ']' .

    ASSIGN  shift, and go to state 149

    $default  reduce using rule 39 (expr)


State 141

   31 expr: ID '.' ID '(' . ')'
   32     | ID '.' ID '(' . actual_list ')'

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    ')'           shift, and go to state 150
    '~'           shift, and go to state 69

    expr         go to state 113
    actual_list  go to state 151


State 142

    9 feature: ID '(' $@2 formal_list ')' ':' typename $@3 '{' expr_list '}' .

    $default  reduce using rule 9 (feature)


State 143

   48 expr: NEW_T INT_T '[' expr ']' .

    $default  reduce using rule 48 (expr)


State 144

   47 expr: NEW_T TYPE '(' actual_list ')' .

    $default  reduce using rule 47 (expr)


State 145

   45 expr: LET_T $@8 formal_list IN_T expr . TEL_T
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    TEL_T  shift, and go to state 152
    LE     shift, and go to state 91
    LT     shift, and go to state 92
    GT     shift, and go to state 93
    GE     shift, and go to state 94
    NE     shift, and go to state 95
    EQ     shift, and go to state 96
    '+'    shift, and go to state 97
    '-'    shift, and go to state 98
    '*'    shift, and go to state 99


State 146

   40 expr: IF_T expr THEN_T expr ELSE_T . expr FI_T

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 153


State 147

   42 expr: WHILE_T expr $@7 LOOP_T expr . POOL_T
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    POOL_T  shift, and go to state 154
    LE      shift, and go to state 91
    LT      shift, and go to state 92
    GT      shift, and go to state 93
    GE      shift, and go to state 94
    NE      shift, and go to state 95
    EQ      shift, and go to state 96
    '+'     shift, and go to state 97
    '-'     shift, and go to state 98
    '*'     shift, and go to state 99


State 148

   50 expr: expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr
   67 actual_list: actual_list ',' expr .

    LE   shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    GE   shift, and go to state 94
    NE   shift, and go to state 95
    EQ   shift, and go to state 96
    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    $default  reduce using rule 67 (actual_list)


State 149

   30 expr: ID '[' expr ']' ASSIGN . expr

    NEW_T         shift, and go to state 52
    ISVOID_T      shift, and go to state 53
    SELF_T        shift, and go to state 54
    NOT_T         shift, and go to state 55
    OUT_STRING    shift, and go to state 56
    OUT_INT       shift, and go to state 57
    IN_INT        shift, and go to state 58
    TRUE_T        shift, and go to state 59
    FALSE_T       shift, and go to state 60
    INT_CONST     shift, and go to state 61
    LET_T         shift, and go to state 62
    IF_T          shift, and go to state 63
    WHILE_T       shift, and go to state 64
    STRING_CONST  shift, and go to state 65
    ID            shift, and go to state 66
    '{'           shift, and go to state 67
    '('           shift, and go to state 68
    '~'           shift, and go to state 69

    expr  go to state 155


State 150

   31 expr: ID '.' ID '(' ')' .

    $default  reduce using rule 31 (expr)


State 151

   32 expr: ID '.' ID '(' actual_list . ')'
   67 actual_list: actual_list . ',' expr

    ')'  shift, and go to state 156
    ','  shift, and go to state 139


State 152

   45 expr: LET_T $@8 formal_list IN_T expr TEL_T .

    $default  reduce using rule 45 (expr)


State 153

   40 expr: IF_T expr THEN_T expr ELSE_T expr . FI_T
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    FI_T  shift, and go to state 157
    LE    shift, and go to state 91
    LT    shift, and go to state 92
    GT    shift, and go to state 93
    GE    shift, and go to state 94
    NE    shift, and go to state 95
    EQ    shift, and go to state 96
    '+'   shift, and go to state 97
    '-'   shift, and go to state 98
    '*'   shift, and go to state 99


State 154

   42 expr: WHILE_T expr $@7 LOOP_T expr POOL_T .

    $default  reduce using rule 42 (expr)


State 155

   30 expr: ID '[' expr ']' ASSIGN expr .
   50     | expr . '+' expr
   51     | expr . '-' expr
   52     | expr . '*' expr
   55     | expr . NE expr
   56     | expr . GT expr
   57     | expr . GE expr
   58     | expr . LT expr
   59     | expr . LE expr
   60     | expr . EQ expr

    LE   shift, and go to state 91
    LT   shift, and go to state 92
    GT   shift, and go to state 93
    GE   shift, and go to state 94
    NE   shift, and go to state 95
    EQ   shift, and go to state 96
    '+'  shift, and go to state 97
    '-'  shift, and go to state 98
    '*'  shift, and go to state 99

    $default  reduce using rule 30 (expr)


State 156

   32 expr: ID '.' ID '(' actual_list ')' .

    $default  reduce using rule 32 (expr)


State 157

   40 expr: IF_T expr THEN_T expr ELSE_T expr FI_T .

    $default  reduce using rule 40 (expr)
